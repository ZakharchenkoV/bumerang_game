// –ë—É–º–µ—Ä–∞–Ω–≥ —è–≤–ª—è–µ—Ç—Å—è –æ—Ä—É–∂–∏–µ–º.
// –í –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ –æ—Ä—É–∂–∏–µ.
// –¢–æ–≥–¥–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Weapon –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º!

class Boomerang {
  constructor({ position, positEnemy }) {
    this.skin = 'üåÄ';
    this.position = position;
    this.positEnemy = positEnemy;
  }

  moveLeft() {
    // –ò–¥—ë–º –≤–ª–µ–≤–æ.
    this.position -= 1;
  }

  moveRight() {
    // –ò–¥—ë–º –≤–ø—Ä–∞–≤–æ.
    this.position += 1;
  }

  fly(skin, heroPos) {
    if (skin === 'üíÄ' && heroPos < this.position) {
      this.moveLeft();
    } else if (skin !== 'üíÄ') {
      this.moveRight();
    }
  }

  // async fly() {
  //   do {
  //     await new Promise((res) => {
  //       setTimeout(() => {
  //         res();
  //       }, 100);
  //     });
  //     this.moveRight();
  //   } while (this.position < this.positEnemy);

  //   do {
  //     await new Promise((res) => {
  //       setTimeout(() => {
  //         res();
  //       }, 100);
  //     });
  //     this.moveLeft();
  //   } while (this.position > this.positEnemy);
  // }
}

module.exports = Boomerang;
